
package org.coderic.ws.dian.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "WcfDianCustomerServices", targetNamespace = "http://wcf.dian.colombia", wsdlLocation = "file:/home/decabyte/dev/org.coderic.ws.dian/src/main/wsdl/WcfDianCustomerServices.wsdl")
public class WcfDianCustomerServices
    extends Service
{

    private static final URL WCFDIANCUSTOMERSERVICES_WSDL_LOCATION;
    private static final WebServiceException WCFDIANCUSTOMERSERVICES_EXCEPTION;
    private static final QName WCFDIANCUSTOMERSERVICES_QNAME = new QName("http://wcf.dian.colombia", "WcfDianCustomerServices");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/decabyte/dev/org.coderic.ws.dian/src/main/wsdl/WcfDianCustomerServices.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WCFDIANCUSTOMERSERVICES_WSDL_LOCATION = url;
        WCFDIANCUSTOMERSERVICES_EXCEPTION = e;
    }

    public WcfDianCustomerServices() {
        super(__getWsdlLocation(), WCFDIANCUSTOMERSERVICES_QNAME);
    }

    public WcfDianCustomerServices(WebServiceFeature... features) {
        super(__getWsdlLocation(), WCFDIANCUSTOMERSERVICES_QNAME, features);
    }

    public WcfDianCustomerServices(URL wsdlLocation) {
        super(wsdlLocation, WCFDIANCUSTOMERSERVICES_QNAME);
    }

    public WcfDianCustomerServices(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WCFDIANCUSTOMERSERVICES_QNAME, features);
    }

    public WcfDianCustomerServices(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WcfDianCustomerServices(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IWcfDianCustomerServices
     */
    @WebEndpoint(name = "WSHttpBinding_IWcfDianCustomerServices")
    public IWcfDianCustomerServices getWSHttpBindingIWcfDianCustomerServices() {
        return super.getPort(new QName("http://wcf.dian.colombia", "WSHttpBinding_IWcfDianCustomerServices"), IWcfDianCustomerServices.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IWcfDianCustomerServices
     */
    @WebEndpoint(name = "WSHttpBinding_IWcfDianCustomerServices")
    public IWcfDianCustomerServices getWSHttpBindingIWcfDianCustomerServices(WebServiceFeature... features) {
        return super.getPort(new QName("http://wcf.dian.colombia", "WSHttpBinding_IWcfDianCustomerServices"), IWcfDianCustomerServices.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WCFDIANCUSTOMERSERVICES_EXCEPTION!= null) {
            throw WCFDIANCUSTOMERSERVICES_EXCEPTION;
        }
        return WCFDIANCUSTOMERSERVICES_WSDL_LOCATION;
    }

}
